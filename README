== L2 Auth
Simple Lineage 2 C4 server emulator written in C as a learning exercise.

== Why does this project exist?
Because it's fun; because I like Lineage 2 (at least until C4 and Interlude 
chronicles) and because I like the C programming language and I thought this 
is an excellent project to work with it.

== Screenshots/demos
See doc/screenshot.

== Running the server with Docker
- Install Docker
- Install docker-compose
- Run docker-compose up
- Server will start listening for connections on localhost (127.0.0.1) 
  ports 2106 (loginserver) and 7777 (gameserver)
- Use any user and password (all are valid) and you should be able to log in

== Game and login server
This project divides the login server (from where the user can authenticate
with a username and password) from the game server (where the user can play).
This is the exact same approach as to what projects like L2J do.

== Lineage 2 Protocol
Lineage 2 uses TCP to send packets.

All integers are little-endian.

The first two bytes of the packet contain the packet size and the third one, 
usually the packet type.

Other than the first packet, all packets are encrypted with blowfish using 
the following hardcoded key ;5.]94-31==-%xT!^[$\000.

== To do
- [ ] Correctly handle big/little-endian
- [x] Display terms of service view
- [x] Display server list
- [x] Allow to enter game server
- [x] Create character
- [ ] Enter world
- [ ] Walk
- [x] Handle multiple connections
- [x] Correctly handle multiple packets at once
- [ ] See other players
- [ ] Spawn random orc (see docs/screenshot/orc.jpg)

== Want to contribute?
Awesome! Just open up an issue detailing what you will be working on, this way
we can be more organized with the work. After that, just have fun working on it!

A few rules for new contributors:
- no dynamic memory allocation (only third party libs are allowed to do so)
- all variables must be initialized
- no NULL, use 0 (shorter to write)
- os related stuff must be inside of the os folder (ie, src/linux)
- storage related stuff, must be inside of storage/name.c (ie, storage/sqlite.c)
- only 1 thread is used to handle requests
- only 1 storage/database connection is used for the server
- only game_server/main.c and login_server/main.c are allowed to spawn threads
- variables exceeding 100 bytes, must be static and zeroed before used
- have fun

== Credits
- l2jserver (http://l2jserver.com/)
- http://fursoffers.narod.ru/Packets.htm
- https://code.google.com/archive/p/l2adenalib/wikis/L2LoginServerProtocol.wiki

== License
GPL
